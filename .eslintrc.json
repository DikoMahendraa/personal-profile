{
	"root": true,
	"parserOptions": {
		"sourceType": "module",
		"tsconfigRootDir": ".",
		"project": ["./tsconfig.json"]
	},
	"parser": "@typescript-eslint/parser",
	"plugins": [
		"@typescript-eslint",
		"testing-library",
		"prettier"
	],
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"prettier"
	],
	"rules": {
		"clean-timer/assign-timer-id": "error",
		"prettier/prettier": [
			"error",
			{
				"endOfLine": "auto"
			}
		],
		"@typescript-eslint/no-unused-vars": "error",
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/naming-convention": [
			"warn",
			{
				"selector": "enum",
				"format": ["PascalCase"],
				"suffix": ["Enum"]
			}
		],
		"prefer-destructuring": [
			"error",
			{
				"array": false,
				"object": true
			},
			{
				"enforceForRenamedProperties": false
			}
		],
		"@typescript-eslint/array-type": [
			"error",
			{
				"default": "generic"
			}
		],
		"@typescript-eslint/prefer-nullish-coalescing": "off",
		"@typescript-eslint/ban-ts-comment": "warn",
		"@typescript-eslint/consistent-generic-constructors": "error",
		"@typescript-eslint/consistent-indexed-object-style": "error",
		"@typescript-eslint/consistent-type-definitions": ["error", "type"],
		"@typescript-eslint/indent": "off",
		"@typescript-eslint/no-duplicate-enum-values": "error",
		"@typescript-eslint/no-shadow": "warn",
		"@typescript-eslint/no-use-before-define": "warn",
		"class-methods-use-this": "off",
		"import/prefer-default-export": 0,
		"no-console": "warn",
		"no-inline-comments": "warn",
		"no-nested-ternary": "warn",
		"no-shadow": "warn",
		"no-unreachable": "error",
		"no-unused-vars": "warn",
		"no-useless-escape": "warn",
		"sonarjs/no-duplicate-string": "warn",
		"sonarjs/no-identical-functions": "warn",
		"sonarjs/cognitive-complexity": ["warn", 30],
		"no-restricted-imports": [
			"warn",
			{
				"patterns": [
					{
						"group": ["../*"],
						"message": "Usage of relative parent imports is not allowed."
					}
				],
				"paths": [
					{
						"name": "classnames",
						"message": "Please use @emotion/css instead"
					}
				]
			}
		],
		"react-hooks/rules-of-hooks": "error",
		"react-hooks/exhaustive-deps": "warn",
		"react/display-name": "off",
		"react/button-has-type": "off",
		"react/jsx-props-no-spreading": "warn",
		"react/jsx-boolean-value": "error",
		"react/jsx-closing-bracket-location": "error",
		"react/jsx-closing-tag-location": "off",
		"react/jsx-curly-newline": "off",
		"react/jsx-filename-extension": [
			"error",
			{ "extensions": [".tsx", ".jsx"] }
		],
		"react/jsx-indent-props": [2, "tab"],
		"react/jsx-indent": "off",
		"react/jsx-tag-spacing": [
			2,
			{
				"beforeSelfClosing": "always"
			}
		],
		"react/jsx-wrap-multilines": [
			2,
			{
				"declaration": "parens-new-line",
				"assignment": "parens-new-line",
				"return": "parens-new-line",
				"arrow": "ignore",
				"condition": "ignore",
				"logical": "ignore",
				"prop": "ignore"
			}
		]
	},
	"settings": {
		"react": {
			"version": "16.0"
		}
	},
	"ignorePatterns": ["**/*.js", "cypress.config.ts"]
}
